name: Flutter CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Instalar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      # --- Gerar firebase_options.dart dinamicamente ---
      - name: Instalar Firebase CLI
        run: npm install -g firebase-tools

      - name: Instalar FlutterFire CLI
        run: |
          dart pub global activate flutterfire_cli
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: Configurar Firebase
        env:
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
          PROJECT_ID: enxovalbaby-d4846
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT_KEY" > /tmp/key.json
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/key.json"
          flutterfire configure \
            --project=$PROJECT_ID \
            --platforms=android,ios,web \
            --yes
          rm /tmp/key.json || true
      # --- Fim da configuração do Firebase ---

      - name: Rodar flutter pub get
        run: flutter pub get

      - name: Rodar testes
        run: flutter test

      # --- [OPCIONAL] Geração e artefato do APK de debug (descomente se quiser gerar para testes internos) ---
      # - name: Gerar APK de debug
      #   run: flutter build apk --debug

      # - name: Salvar APK de debug como artefato
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: debug-apk
      #     path: build/app/outputs/flutter-apk/app-debug.apk
      # --- Fim da seção do debug ---

      # --- Geração e artefato de release (.apk e .aab) ---
      - name: Gerar APK de release
        run: flutter build apk --release

      - name: Salvar APK de release como artefato
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Gerar AAB (Android App Bundle)
        run: flutter build appbundle --release

      - name: Salvar AAB como artefato
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: build/app/outputs/bundle/release/app-release.aab
      # --- Fim dos builds de release ---
